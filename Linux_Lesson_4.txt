1. Написать регулярное выражение, которое проверяет является ли строка валидным IP-адрес. Например, 192.168.1.1 подойдет, а 256.300.1.1 — нет.

/^(0\.|9\.|([1,2,6,9][0-9]\.)|([1,2][0-9][0-9]\.))(1\.|0\.|([1-9][0-9]\.)|([1,2][0-9][0-9]\.))(1\.|0\.|2\.|([1-9][0-9]\.)|([1,2][1-9][0-9]\.))(1|0|([1-9][0-9])|([1,2][1-9][0-9]))$/gm

2. Написать регулярное выражение, которое проверяет, является ли указанный файл картинкой. Картинкой считаем файлы, названия которых оканчиваются на .jpg, .png или .gif.

/^((\w+)|(\w+)(\.|\+|\-)(\w+))\.(jpg|png|gif)$/gm

3. Написать регулярное выражение для проверки, ведет ли ссылка URL на некоторый файл, и это действительно ссылка на картинку. Картинкой считаем файлы, названия которых оканчиваются на .jpg, .png или .gif.

/^(https?:\/\/(\w+\.)+(\w+\/)+(((\?)?(\w+)?(\=)?\/)+|(\w+))((\w+)(\+|\-|\.)?)+\.(jpg|png|gif))$/gm

4. *Написать регулярное выражение, которое проверяет, является ли строка валидным «белым» IP-адресом (5.255.255.5 подойдет, а 172.16.0.1 — нет).

/^(?!(10|127|169\.254|172\.1[6-9]|172\.2[0-9]|172\.3[0-1]|192\.168|0|255\.255)\.)(9\.|5\.|([1,2,6,9][1-9]\.)|([1,2][0-9][0,1,2,3,4,5,6,8,9]\.))(1\.|0\.|([1-9][0-9]\.)|([1,2][0-9][0-9]\.))(1\.|0\.|2\.|([1-9][0-9]\.)|([1,2][1-9][0-9]\.))(1|0|([1-9][0-9])|([1,2][1-9][0-9]))$/gm

